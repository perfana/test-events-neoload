/*
 * Copyright (C) 2024 Peter Paul Bakker, Perfana
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package io.perfana.event.neoload.model;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import jakarta.annotation.Generated;


@JsonIgnoreProperties(
  value = "type", // ignore manually set type, it will be automatically generated by Jackson during serialization
  allowSetters = true // allows the type to be set during deserialization
)
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "type", visible = true)
@JsonSubTypes({
  @JsonSubTypes.Type(value = ErrorCountByCodePage.class, name = "CODE"),
  @JsonSubTypes.Type(value = ErrorCountByElementPage.class, name = "ELEMENT"),
  @JsonSubTypes.Type(value = ErrorCountByLgPage.class, name = "LG"),
  @JsonSubTypes.Type(value = ErrorCountByCodePage.class, name = "ErrorCountByCodePage"),
  @JsonSubTypes.Type(value = ErrorCountByElementPage.class, name = "ErrorCountByElementPage"),
  @JsonSubTypes.Type(value = ErrorCountByLgPage.class, name = "ErrorCountByLgPage")
})

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2024-04-06T15:29:22.895694+02:00[Europe/Amsterdam]", comments = "Generator version: 7.4.0")
public interface ErrorsPage {
    public String getType();
}
